// <auto-generated />
using System;
using KitchenAid.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KitchenAid.DataAccess.Migrations
{
    [DbContext(typeof(InventoryContext))]
    partial class InventoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KitchenAid.Model.Helper.StorageProduct", b =>
                {
                    b.Property<int>("StorageId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("StorageId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("StorageProducts");

                    b.HasData(
                        new
                        {
                            StorageId = 1,
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("KitchenAid.Model.Inventory.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "All kind of fish",
                            Name = "Fish"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Meat from pig",
                            Name = "Pork"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Meat from ox",
                            Name = "Ox"
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Meat from deer",
                            Name = "Deer"
                        },
                        new
                        {
                            CategoryId = 5,
                            Description = "Meat from elk",
                            Name = "Elk"
                        },
                        new
                        {
                            CategoryId = 6,
                            Description = "Meat from reindeer",
                            Name = "Reindeer"
                        },
                        new
                        {
                            CategoryId = 7,
                            Description = "Milk, yoghurt etc.",
                            Name = "Dairy"
                        },
                        new
                        {
                            CategoryId = 8,
                            Description = "All kind of pasta",
                            Name = "Pasta"
                        },
                        new
                        {
                            CategoryId = 9,
                            Description = "All sorts of sweets",
                            Name = "Sweets"
                        },
                        new
                        {
                            CategoryId = 10,
                            Description = "Cleaning products",
                            Name = "Cleaning"
                        });
                });

            modelBuilder.Entity("KitchenAid.Model.Inventory.PriceHistory", b =>
                {
                    b.Property<int>("PriceHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("PriceHistoryId");

                    b.HasIndex("ProductId");

                    b.ToTable("PriceHistories");

                    b.HasData(
                        new
                        {
                            PriceHistoryId = 1,
                            Date = new DateTime(2021, 4, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 170.0,
                            ProductId = 1
                        },
                        new
                        {
                            PriceHistoryId = 2,
                            Date = new DateTime(2021, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 172.0,
                            ProductId = 1
                        },
                        new
                        {
                            PriceHistoryId = 3,
                            Date = new DateTime(2021, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 179.0,
                            ProductId = 1
                        },
                        new
                        {
                            PriceHistoryId = 4,
                            Date = new DateTime(2021, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 123.0,
                            ProductId = 1
                        });
                });

            modelBuilder.Entity("KitchenAid.Model.Inventory.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<double>("CurrentPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("QuantityUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoredIn")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            CurrentPrice = 245.0,
                            Name = "Norwegian salmon",
                            Quantity = 2.2999999999999998,
                            QuantityUnit = "kg",
                            StoredIn = 1
                        });
                });

            modelBuilder.Entity("KitchenAid.Model.Inventory.Storage", b =>
                {
                    b.Property<int>("StorageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("KindOfStorage")
                        .HasColumnType("int");

                    b.HasKey("StorageId");

                    b.ToTable("Storages");

                    b.HasData(
                        new
                        {
                            StorageId = 1,
                            CreatedOn = new DateTime(2021, 5, 23, 22, 25, 18, 636, DateTimeKind.Local).AddTicks(2160),
                            KindOfStorage = 0
                        });
                });

            modelBuilder.Entity("KitchenAid.Model.Recipes.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("KitchenAid.Model.Recipes.Instruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InstructionId")
                        .HasColumnType("int");

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReadyInMinutes")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Instructions");
                });

            modelBuilder.Entity("KitchenAid.Model.Recipes.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("KitchenAid.Model.Helper.StorageProduct", b =>
                {
                    b.HasOne("KitchenAid.Model.Inventory.Product", "Product")
                        .WithMany("Storages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KitchenAid.Model.Inventory.Storage", "Storage")
                        .WithMany("Products")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KitchenAid.Model.Inventory.PriceHistory", b =>
                {
                    b.HasOne("KitchenAid.Model.Inventory.Product", "Product")
                        .WithMany("PriceHistory")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KitchenAid.Model.Inventory.Product", b =>
                {
                    b.HasOne("KitchenAid.Model.Inventory.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KitchenAid.Model.Recipes.Ingredient", b =>
                {
                    b.HasOne("KitchenAid.Model.Recipes.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("KitchenAid.Model.Recipes.Instruction", b =>
                {
                    b.HasOne("KitchenAid.Model.Recipes.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId");
                });
#pragma warning restore 612, 618
        }
    }
}
